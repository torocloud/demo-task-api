{
    "input": [
        {
            "name": "requestBody",
            "type": "model",
            "gloopProperties": [
                {
                    "name": "description"
                },
                {
                    "name": "taskId",
                    "type": "integer"
                },
                {
                    "name": "userId",
                    "type": "integer"
                }
            ]
        }
    ],
    "output": [
        {
            "name": "responseCode",
            "type": "integer",
            "defaultValue": "200"
        },
        {
            "name": "APIResponse",
            "type": "model",
            "reference": "io.toro.martini.api.APIResponse",
            "gloopProperties": [
                {
                    "name": "note",
                    "type": "model",
                    "reference": "demo_api_tasks.models.Note"
                }
            ]
        },
        {
            "name": "APIException",
            "type": "model",
            "reference": "io.toro.martini.api.APIException"
        }
    ],
    "steps": [
        {
            "type": "block",
            "blockType": "TRY_CATCH",
            "children": [
                {
                    "declare": [
                        {
                            "variables": [
                                {
                                    "name": "note",
                                    "type": "model",
                                    "reference": "demo_api_tasks.models.Note"
                                }
                            ]
                        }
                    ],
                    "lines": [
                        {
                            "from": [
                                "requestBody"
                            ],
                            "to": [
                                "note"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "now",
                            "to": [
                                "note",
                                "createdDate"
                            ]
                        }
                    ]
                },
                {
                    "type": "fork",
                    "expression": "note?.taskId != null",
                    "children": [
                        {
                            "type": "block",
                            "label": "true",
                            "children": [
                                {
                                    "type": "invokeGloop",
                                    "name": "demo_api_tasks.services_sql.task.SelectTask",
                                    "declare": [
                                        {
                                            "variables": [
                                                {
                                                    "name": "selectTaskOutput",
                                                    "type": "model",
                                                    "gloopProperties": [
                                                        {
                                                            "name": "taskId",
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "name": "subject"
                                                        },
                                                        {
                                                            "name": "status"
                                                        },
                                                        {
                                                            "name": "description"
                                                        },
                                                        {
                                                            "name": "deadline",
                                                            "type": "date"
                                                        },
                                                        {
                                                            "name": "dependencyTask",
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "name": "createdDate",
                                                            "type": "date"
                                                        },
                                                        {
                                                            "name": "modifiedDate",
                                                            "type": "date"
                                                        },
                                                        {
                                                            "name": "projectId",
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "name": "assignedUserId",
                                                            "type": "integer"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "inputs": [
                                        {
                                            "from": [
                                                "note",
                                                "taskId"
                                            ],
                                            "to": [
                                                "selectTaskInput",
                                                "taskId"
                                            ]
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "from": [
                                                "selectTaskOutput"
                                            ],
                                            "to": [
                                                "selectTaskOutput"
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "fork",
                                    "expression": "selectTaskOutput?.taskId == null",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "true",
                                            "children": [
                                                {
                                                    "lines": [
                                                        {
                                                            "type": "set",
                                                            "expression": "400",
                                                            "to": [
                                                                "responseCode"
                                                            ]
                                                        },
                                                        {
                                                            "type": "set",
                                                            "expression": "'Task' record not found.",
                                                            "to": [
                                                                "APIException",
                                                                "message"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "break",
                                                    "expression": "$gloopService"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "fork",
                    "expression": "note?.userId != null",
                    "children": [
                        {
                            "type": "block",
                            "label": "true",
                            "children": [
                                {
                                    "type": "invokeGloop",
                                    "name": "demo_api_tasks.services_sql.user.SelectUser",
                                    "declare": [
                                        {
                                            "variables": [
                                                {
                                                    "name": "selectUserOutput",
                                                    "type": "model",
                                                    "gloopProperties": [
                                                        {
                                                            "name": "userId",
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "name": "firstName"
                                                        },
                                                        {
                                                            "name": "lastName"
                                                        },
                                                        {
                                                            "name": "email"
                                                        },
                                                        {
                                                            "name": "createdDate",
                                                            "type": "date"
                                                        },
                                                        {
                                                            "name": "modifiedDate",
                                                            "type": "date"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "inputs": [
                                        {
                                            "from": [
                                                "note",
                                                "userId"
                                            ],
                                            "to": [
                                                "selectUserInput",
                                                "userId"
                                            ]
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "from": [
                                                "selectUserOutput"
                                            ],
                                            "to": [
                                                "selectUserOutput"
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "fork",
                                    "expression": "selectUserOutput?.userId == null",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "true",
                                            "children": [
                                                {
                                                    "lines": [
                                                        {
                                                            "type": "set",
                                                            "expression": "400",
                                                            "to": [
                                                                "responseCode"
                                                            ]
                                                        },
                                                        {
                                                            "type": "set",
                                                            "expression": "'User' record not found.",
                                                            "to": [
                                                                "APIException",
                                                                "message"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "break",
                                                    "expression": "$gloopService"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "invokeGloop",
                    "name": "demo_api_tasks.services_sql.note.InsertNote",
                    "declare": [
                        {
                            "variables": [
                                {
                                    "name": "updateCount",
                                    "type": "integer"
                                }
                            ]
                        }
                    ],
                    "inputs": [
                        {
                            "from": [
                                "note",
                                "description"
                            ],
                            "to": [
                                "insertNoteInput",
                                "description"
                            ]
                        },
                        {
                            "from": [
                                "note",
                                "createdDate"
                            ],
                            "to": [
                                "insertNoteInput",
                                "createdDate"
                            ]
                        },
                        {
                            "from": [
                                "note",
                                "taskId"
                            ],
                            "to": [
                                "insertNoteInput",
                                "taskId"
                            ]
                        },
                        {
                            "from": [
                                "note",
                                "userId"
                            ],
                            "to": [
                                "insertNoteInput",
                                "userId"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "true",
                            "to": [
                                "insertNoteInput",
                                "$getGeneratedKeys"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "from": [
                                "updateCount"
                            ],
                            "to": [
                                "updateCount"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "$gloopOutput.generatedKeys.noteId",
                            "evaluate": true,
                            "to": [
                                "note",
                                "noteId"
                            ]
                        }
                    ]
                },
                {
                    "type": "invokeCode",
                    "declare": [
                        {
                            "variables": [
                                {
                                    "name": "searchResult",
                                    "type": "model",
                                    "reference": "io.toro.martini.tracker.SearchResult"
                                }
                            ]
                        }
                    ],
                    "className": "io.toro.martini.TrackerMethods",
                    "methodName": "searchTracker",
                    "parameters": [
                        "java.lang.String",
                        "java.lang.String[]",
                        "java.lang.String[]",
                        "java.lang.String[]",
                        "java.lang.String[]",
                        "java.lang.String[]",
                        "java.util.Date",
                        "java.util.Date",
                        "java.lang.String[]",
                        "java.lang.String[]",
                        "java.lang.String[]",
                        "java.lang.String[]",
                        "int",
                        "int"
                    ],
                    "inputs": [
                        {
                            "type": "set",
                            "expression": "[note.taskId]",
                            "evaluate": true,
                            "to": [
                                "externalId"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "Task",
                            "to": [
                                "documentTypeId"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "from": [
                                "searchResult"
                            ],
                            "to": [
                                "searchResult"
                            ]
                        }
                    ]
                },
                {
                    "type": "fork",
                    "expression": "updateCount > 0 && note?.noteId != null",
                    "children": [
                        {
                            "type": "block",
                            "label": "true",
                            "children": [
                                {
                                    "lines": [
                                        {
                                            "from": [
                                                "note"
                                            ],
                                            "to": [
                                                "APIResponse",
                                                "note"
                                            ]
                                        },
                                        {
                                            "type": "set",
                                            "expression": "200",
                                            "to": [
                                                "responseCode"
                                            ]
                                        },
                                        {
                                            "type": "set",
                                            "expression": "Successfully processed the request.",
                                            "to": [
                                                "APIResponse",
                                                "message"
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "fork",
                                    "expression": "searchResult.numFound",
                                    "children": [
                                        {
                                            "type": "invokeCode",
                                            "label": "1",
                                            "className": "io.toro.martini.TrackerMethods",
                                            "methodName": "addDocumentState",
                                            "parameters": [
                                                "java.lang.String",
                                                "java.lang.String",
                                                "java.lang.String"
                                            ],
                                            "inputs": [
                                                {
                                                    "type": "set",
                                                    "expression": "searchResult.searchResults[0].internalId",
                                                    "evaluate": true,
                                                    "to": [
                                                        "internalId"
                                                    ]
                                                },
                                                {
                                                    "type": "set",
                                                    "expression": "Note Added",
                                                    "to": [
                                                        "stateName"
                                                    ]
                                                },
                                                {
                                                    "type": "set",
                                                    "expression": "note.asJson()",
                                                    "evaluate": true,
                                                    "to": [
                                                        "content"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "label": "false",
                            "lines": [
                                {
                                    "type": "set",
                                    "expression": "400",
                                    "to": [
                                        "responseCode"
                                    ]
                                },
                                {
                                    "type": "set",
                                    "expression": "Bad Request.",
                                    "to": [
                                        "APIException",
                                        "message"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "catch": [
                {
                    "type": "invokeCode",
                    "className": "io.toro.martini.LoggerMethods",
                    "methodName": "error",
                    "parameters": [
                        "java.lang.String",
                        "java.lang.Throwable"
                    ],
                    "inputs": [
                        {
                            "from": [
                                "$gloopException",
                                "gloopStackTrace"
                            ],
                            "to": [
                                "message"
                            ]
                        },
                        {
                            "from": [
                                "$gloopException",
                                "realException"
                            ],
                            "to": [
                                "throwable"
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "children": [
                        {
                            "lines": [
                                {
                                    "type": "set",
                                    "expression": "500",
                                    "to": [
                                        "responseCode"
                                    ]
                                },
                                {
                                    "type": "set",
                                    "expression": "Oh no! An unexpected error occurred.",
                                    "to": [
                                        "APIException",
                                        "message"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}