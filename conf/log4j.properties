# Root logger option
log4j.rootLogger=WARN, stdout, file, stomp, apiResponse
# Direct log messages to stdout
log4j.appender.stdout=io.toro.martini.logging.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{dd/MM/yy HH:mm:ss.SSS} %-5p [%c{1}] %m%n
# Direct log messages to a log file, rotates every day
log4j.appender.file=io.toro.martini.util.MartiniFileLogger
log4j.appender.file.File=${toroesb.home}/logs/martini-log.txt
log4j.appender.file.DatePattern='.'yyyy-MM-dd
# Log file max size (in bytes) and log parts compression option
log4j.appender.file.MaxFileSize=1000000
log4j.appender.file.CompressParts=true
# The maximum number of days past the current date a log file can be stored before it is deleted.
log4j.appender.file.MaxNumberOfDays=7
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{dd/MM/yy HH:mm:ss.SSS} %-5p [%c{1}] %m%n
# Log http traffic
# Direct log messages to a log file, rotates every day
log4j.appender.web=io.toro.martini.util.MartiniFileLogger
log4j.appender.web.File=${toroesb.home}/logs/martini-http-log.txt
log4j.appender.web.DatePattern='.'yyyy-MM-dd
log4j.appender.web.layout=org.apache.log4j.PatternLayout
log4j.appender.web.layout.ConversionPattern=%d{dd/MM/yy HH:mm:ss.SSS} %-5p [%c{1}] %m%n
log4j.appender.web.MaxFileSize=1000000
log4j.appender.web.CompressParts=true
# Direct log messages to web-socket via STOMP
log4j.appender.stomp=io.toro.martini.logging.StompOverWebSocketPublishingAppender
log4j.appender.stomp.layout=org.apache.log4j.EnhancedPatternLayout
log4j.appender.stomp.layout.ConversionPattern=%d{dd/MM/yy HH:mm:ss.SSS} %-5p [%c{1}] %m%n%throwable
# Save logs as APILogMessage beans in a threadlocal.
log4j.appender.apiResponse=io.toro.martini.logging.APIResponseLogAppender
log4j.appender.apiResponse.layout=org.apache.log4j.EnhancedPatternLayout
log4j.appender.apiResponse.layout.ConversionPattern=%d{dd/MM/yy HH:mm:ss.SSS} [%c{1}] %m
log4j.appender.apiResponse.Threshold=INFO

log4j.logger.System.out=INFO
log4j.logger.System.err=ERROR

# Default logger used by LoggerMethods
log4j.logger.Martini=DEBUG

log4j.category.io.toro=INFO

log4j.category.org.apache.tomcat=INFO
log4j.category.org.apache.catalina.core.ContainerBase=WARN
log4j.category.org.apache.coyote=WARN
log4j.category.org.apache.catalina=WARN
log4j.category.org.apache.solr=WARN
log4j.category.org.apache.catalina.valves=OFF
#change to debug to see http traffic coming from and going to tomcat
log4j.category.org.apache.coyote.http11=INFO

## broker
#log4j.category.org.apache.activemq=TRACE
## http client calls change to debug to see outgoing http data
log4j.category.org.apache.http.headers=ERROR
log4j.category.org.apache.http.wire=ERROR
##jdbc/hibernate
#log4j.logger.org.hibernate.SQL=trace
#log4j.logger.org.hibernate.engine.query=trace
#to show bound parameters
#log4j.logger.org.hibernate.type=trace
#log4j.logger.org.hibernate.jdbc=trace
log4j.logger.org.hibernate.type.descriptor.java=OFF
log4j.logger.org.hibernate.action.internal=ERROR
# spring websocket
log4j.logger.org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler=OFF
log4j.logger.org.springframework.web.socket.messaging.SubProtocolWebSocketHandler=OFF
## ftp server
#log4j.logger.org.apache.ftpserver=DEBUG
## spring mail
#log4j.logger.org.springframework.integration.mail=DEBUG

##Martini custom authentication
#log4j.logger.io.toro.martini.http.filter.SessionRepositoryFilter.SESSION_LOGGER=DEBUG

# change to debug if you want to see the Martini rest API exceptions being logged
log4j.logger.io.toro.martini.rest.action.exception.RESTESBExceptionHandler=ERROR
log4j.logger.io.toro.martini.rest.action.exception.BaseApiExceptionHandler=ERROR

# package specific logs. To change the log level for Martini components handling a specific package,
# configure a logger called io.toro.martini.package.<packageName>
log4j.category.io.toro.martini.package=WARN

# flux
log4j.category.io.toro.fluxengine=INFO

# Change the 'INFO' to log the dynamic mapping changes]
log4j.logger.io.toro.martini.common.concurrent=WARN
log4j.logger.io.toro.martini.jms.stomp=ERROR
log4j.logger.io.toro.martini.spring=WARN
log4j.logger.io.toro.martini.spring.DefaultPackageSpringContextConfigurer=INFO

log4j.logger.io.toro.martini.web.DynamicHandlerMethod=WARN
log4j.logger.io.toro.fluxengine.web.FluxOperationHandlerMapping=WARN
log4j.logger.io.toro.gloop.web.GloopAdhocRestHandlerMapping=WARN
log4j.logger.io.toro.gloop.web.GloopApiDocHandlerMapping=WARN
log4j.logger.io.toro.gloop.web.GloopRestDefinitionHandlerMapping=WARN
log4j.logger.io.toro.gloop.web.GloopRestOperationHandlerMapping=WARN
log4j.logger.io.toro.gloop.web.GloopSoapOperationHandlerMapping=WARN
log4j.logger.io.toro.gloop.web.GloopTemplateAdhocRouteHandlerMapping=WARN
log4j.logger.io.toro.martini.endpoint.UrlAliasHandlerMapping=WARN
log4j.logger.io.toro.martini.invoker.ServiceHandlerMapping=WARN
log4j.logger.io.toro.martini.web.DynamicRequestMappingHandlerMapping=WARN
log4j.logger.io.toro.martini.web.PackageHandlerMappingProvider=WARN
log4j.logger.io.toro.martini.invoker.ServiceHandlerAdapter=WARN

log4j.additivity.io.toro.martini.web.Log4jAccessLogger=false
# Change the level of the HttpWireLogger to DEBUG to have martini log incoming http traffic.
log4j.logger.io.toro.martini.web.HttpWireLogger=INFO, web
